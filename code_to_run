###############################################
########## Load subsetted fastq files that you will analyze
###############################################

# Double click on "raw_fastqs" folder
# Either drag and drop or click "upload files" icon to upload fastq files
# Make sure R1 and R2 are included
# WAIT until the bar at the bottom of the screen is fully loaded!


## Begin running code in the terminal (paste uncommented lines into terminal and hit enter):


###############################################
########## Run a quality check on the raw reads
###############################################

## Bring the terminal into the folder with the fastq files
cd ~/raw_fastqs

## Run a quality control check on ALL the raw fastq files in the folder "fastq_files"
fastqc *.fastq.gz

## run multiqc to get a single summary of the fastq outputs in one place
multiqc .


# My Binder isn't able to visualize multiqc data, so you need to download it to see
# Right click on the "multiqc_report.html" output and click download
# Click to open in your downloads folder - it should open in web browser



###############################################
########## Trim and filter the raw reads to output trimmed and filtered sequencing reads
###############################################

## Run trimmomatic to export high quality, paired reads
trimmomatic PE BS_R1.fq.gz BS_R2.fq.gz trimmed_paired/BS_R1_paired.fastq.gz BS_R1_unpaired.fastq.gz trimmed_paired/BS_R2_paired.fastq.gz BS_R2_unpaired.fastq.gz ILLUMINACLIP:TruSeq-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20



###############################################
########## Run a quality check on the trimmed, paired reads
###############################################

## Bring the terminal into the folder with the trimmed, paired fastq files
cd trimmed_paired

## Re-run a quality control check on ALL the PAIRED, FILTERED fastq files
fastqc *_paired.fastq.gz

## run multiqc to get a single summary of the fastq outputs in one place
multiqc .


# My Binder isn't able to visualize multiqc data, so you need to download it to see
# Right click on the "multiqc_report.html" output and download
# Click to open in downloads and it should open in browser

###############################################
########## Assemble and quality control genome with Unicycler
###############################################

## Run unicycler to assemble short reads into contigs
unicycler -t 32 -1 BS_R1_paired.fastq.gz -2 BS_R2_paired.fastq.gz -o ~/unicycler_output

## Bring the terminal into the folder with the assembled genome
cd ~/unicycler_output

## Use the bbtools "reformat" program to only keep contigs >1kb
~/bbmap/reformat.sh in=assembly.fasta out=assembly_min1000.fasta minlength=1000

## Run Bioinformatics Tools "bit" to summarize the genome assembly (how complete is the puzzle?)
bit-summarize-assembly assembly_min1000.fasta


###############################################
########## Run sourmash to perform taxonomic profiling
###############################################

### Create a "sketch" of our assmbled genome
sourmash sketch dna -p scaled=1000,k=31 --name-from-first BS_assembly_min1000.fasta

## Run sourmash "classify" to assign taxonomy to our genome "sketch" using the genbank database
sourmash lca classify --db genbank-k31.lca.json.gz --query BS_assembly_min1000.fasta.sig


###############################################
########## Wait wait wait.... please tell me this isn't Blue Soy Milk
###############################################

## Compare BlueSoup genome assembly to the genomes from the Blue Soy Milk paper using fastANI
# Genome 1
fastANI -q BS_assembly_min1000.fasta -r BlueSoyMilk_Genomes/MED3_GCA_019097565.1_ASM1909756v1_genomic.fna -o BS_carnisMED3
# Genome 2
fastANI -q BS_assembly_min1000.fasta -r BlueSoyMilk_Genomes/MED7_GCA_019097535.1_ASM1909753v1_genomic.fna -o BS_carnisMED7





